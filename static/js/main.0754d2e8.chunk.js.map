{"version":3,"sources":["components/SearchBar.js","components/SearchResults.js","components/Banner.js","components/Nominations.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","searchMovies","className","type","name","id","onChange","e","target","value","placeholder","SearchResults","addNomination","nominations","search","movies","map","movie","Title","Year","find","ele","length","onClick","disabled","src","alt","Banner","bannerSwitch","Nominations","useState","banner","setBanner","console","log","deleteNomination","nominee","Footer","href","App","axios","defaults","baseURL","searchResults","setMovies","movieName","get","process","then","doc","data","Search","catch","err","response","movieToAdd","nominationList","push","newList","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0754d2e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/style.css'\r\n\r\nfunction SearchBar(props) {\r\n\r\n    const { searchMovies } = props\r\n\r\n    return (\r\n        <div className = 'search-bar'>\r\n            <div className = 'headings'>\r\n                <h1>\r\n                    The Shoppies\r\n                </h1>\r\n                <h4>The movie awards for Entrepreneurs</h4>\r\n            </div>\r\n            <input type = 'text' name = 'search' id = 'search' onChange = {(e) => searchMovies(e.target.value)} placeholder = 'Enter your movie search here'></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\n\r\nfunction SearchResults(props) {\r\n\r\n    const { addNomination,nominations,search } = props\r\n\r\n    const movies = props.movies ? (\r\n        props.movies.map(movie => {\r\n            return (\r\n                <div className = 'movie-card'>\r\n                    <div className = 'movie-card-txt'>\r\n                        <h4>{movie.Title}</h4>\r\n                        <div className = 'movie-meta'>\r\n                            <span>\r\n                                <b>Year - </b>\r\n                                {movie.Year}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className = 'movie-card-btn'>\r\n                        {nominations.find(ele => ele.Title === movie.Title) ? (\r\n                            <button onClick = {() => addNomination(movie.Title)} disabled>\r\n                                Nominate Movie\r\n                            </button>\r\n                        ) : (\r\n                            nominations.length >=5 ? (\r\n                                <button onClick = {() => addNomination(movie.Title)} disabled>\r\n                                    Nominate Movie\r\n                                </button>\r\n                            ) : (\r\n                                <button onClick = {() => addNomination(movie.Title)}>\r\n                                    Nominate Movie\r\n                                </button>\r\n                            )\r\n                        )}\r\n                        \r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    ) : (\r\n        <div className = 'empty-div'>\r\n            <div>\r\n                <img src=\"https://img.icons8.com/wired/64/000000/starred-ticket.png\"  alt = \"illustration of a movie ticket\" />\r\n                <h4>No movies found</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className = 'movie-search-section'>\r\n            <div className = 'movie-section-heading'>\r\n                <h3>\r\n                    Your results for \"{search}\"\r\n                </h3>\r\n            </div>\r\n            {movies}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults\r\n","import React from 'react'\r\n\r\nfunction Banner(props) {\r\n\r\n    const { bannerSwitch } = props\r\n\r\n    return (\r\n        <div className = 'nomination-banner'>\r\n            <div className = 'banner-card'>\r\n                <h1>Thank You!</h1>\r\n                <h4>You have nominated 5 movies.</h4>\r\n                <button onClick = {bannerSwitch}>Ok</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useState} from 'react'\r\nimport Banner from './Banner'\r\n\r\nfunction Nominations(props) {\r\n\r\n    const [banner, setBanner] = useState(true)\r\n\r\n    const bannerSwitch = () => {\r\n        setBanner(!banner)\r\n        console.log(banner)\r\n    }\r\n\r\n\r\n    const {deleteNomination} = props\r\n\r\n    const nominations = props.nominations.length > 0 ? (\r\n        props.nominations.map(nominee => {\r\n            return (\r\n                <div className = 'movie-card nomination-card'>\r\n                    <div className = 'movie-card-txt'>\r\n                        <h4>{nominee.Title}</h4>\r\n                        <div className = 'movie-meta'>\r\n                            <span>\r\n                                <b>Year - </b>\r\n                                {nominee.Year}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className = 'movie-card-btn'>\r\n                        <button onClick = {() => deleteNomination(nominee.Title)}>\r\n                            Remove Nomination\r\n                        </button>\r\n                    </div>\r\n                    {props.nominations.length >= 5 && banner === true? (<Banner bannerSwitch = {bannerSwitch} />) :( <></>)}\r\n                </div>\r\n            )\r\n\r\n        })\r\n    ) : (\r\n        <div className = 'empty-div'>\r\n            <div>\r\n                <img src=\"https://img.icons8.com/pastel-glyph/64/000000/the-oscars--v2.png\" alt = 'illustration of an oscar'/> \r\n                <h4>No nomination right now. Add nominations</h4>\r\n            </div>\r\n        </div>\r\n        )\r\n\r\n\r\n    \r\n    return (\r\n        <div className = 'movie-search-section  nomination-section'>\r\n            <div className = 'movie-section-heading'>\r\n                <h3>\r\n                    Nominations for the award.\r\n                </h3>\r\n            </div>\r\n            {nominations}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nominations\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            Developed by <a href = 'https://github.com/itsprabhi'>Prabhi</a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {useState} from 'react'\nimport axios from 'axios'\n\n//Components\nimport SearchBar from './components/SearchBar';\nimport SearchResults from './components/SearchResults';\nimport Nominations from './components/Nominations';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  // setting the default url\n  axios.defaults.baseURL = `http://www.omdbapi.com/`\n\n  const [movies, setMovies] = useState({\n    search:'',\n    searchResults:[],\n    nominations:[]\n  })\n\n  \n\n\n  //seaching a movie\n  const searchMovies = (name) => {\n    const movieName = name\n    axios.get(`/?apikey=${process.env.REACT_APP_OMDB_API_KEY}&i=tt3896198&s=${movieName}&t=movie&r=json`)\n    .then(doc => {\n      console.log(doc.data)\n      setMovies({\n        ...movies,\n        searchResults: doc.data.Search,\n        search:name\n      })\n    })\n    .catch(err => {\n      console.log(err.response)\n    })\n  }\n\n  //adding the nomination\n  const addNomination = (Title) => {\n    const movieToAdd = movies.searchResults.find(ele => ele.Title === Title)\n    const nominationList = movies.nominations\n    nominationList.push(movieToAdd)\n    setMovies({\n      ...movies,\n      nominations:nominationList\n    })\n  }\n\n  //deleting the nomination\n  const deleteNomination = (Title) => {\n    const nominationList = movies.nominations\n    const newList = nominationList.filter(ele => ele.Title !== Title)\n    setMovies({\n      ...movies,\n      nominations:newList\n    })\n  }\n\n  return (\n    \n    <div className=\"App\">\n      <SearchBar searchMovies = {searchMovies} />\n      <div className = 'movies-section'>\n        <SearchResults movies = {movies.searchResults} nominations = {movies.nominations} addNomination = {addNomination} search = {movies.search} />\n        <Nominations nominations = {movies.nominations} deleteNomination = {deleteNomination} />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}